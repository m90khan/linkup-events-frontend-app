import Link from 'next/link';
import EventItem from '../../components/EventItem';
import Layout from '../../components/Layout';
import { GetStaticProps, GetStaticPaths } from 'next';
import { API_URL, PER_PAGE } from '../../config';
import { event } from '../../config/types';
import { Title } from '../../styles/styles';
import { NextPage, GetServerSideProps } from 'next';
import Pagination from '../../components/Pagination';

interface Props {
  events: event[];
  page: number;
  total: number;
}
export default function Events({ events, page, total }: Props) {
  return (
    <Layout
      title='Events'
      description='Generated by create next app'
      keywords='event manager'
    >
      {events.length === 0 && <h3>No events to show</h3>}

      <Title>Events</Title>
      {events.map((evt) => (
        <EventItem key={evt.id} evt={evt} />
      ))}

      {events.length > 0 && (
        <>
          <div
            style={{
              display: 'flex',
              justifyContent: 'space-between',
            }}
          >
            <Link href='/events'>
              <a className='btn btn-large'>View All Events</a>
            </Link>
            <Pagination page={page} total={total} />
          </div>
        </>
      )}
    </Layout>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ query: { page = 1 } }) => {
  // Calculate start page | + to convert to number
  const start = +page === 1 ? 0 : (+page - 1) * PER_PAGE;

  // Fetch total/count
  const totalRes = await fetch(`${API_URL}/events/count`);
  const total = await totalRes.json();

  // Fetch events
  const eventRes = await fetch(
    `${API_URL}/events?_sort=date:ASC&_limit=${PER_PAGE}&_start=${start}`
  );
  const events = await eventRes.json();

  return {
    props: { events, page: +page, total },
  };
};
